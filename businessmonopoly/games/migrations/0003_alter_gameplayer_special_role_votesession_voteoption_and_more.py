# Generated by Django 5.2.3 on 2025-08-21 11:12

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('games', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name='gameplayer',
            name='special_role',
            field=models.IntegerField(choices=[(0, ''), (1, 'Банкир'), (2, 'Политик')], default=0),
        ),
        migrations.CreateModel(
            name='VoteSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(choices=[('election', 'Election'), ('event', 'Event')], max_length=32)),
                ('question', models.CharField(blank=True, max_length=255)),
                ('started_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('ends_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('meta', models.JSONField(blank=True, default=dict)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vote_sessions', to='games.game')),
            ],
        ),
        migrations.CreateModel(
            name='VoteOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(blank=True, max_length=255)),
                ('object_id', models.PositiveIntegerField()),
                ('weight', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='games.votesession')),
            ],
        ),
        migrations.CreateModel(
            name='VoteBallot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('voter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ballots', to=settings.AUTH_USER_MODEL)),
                ('option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ballots', to='games.voteoption')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ballots', to='games.votesession')),
            ],
        ),
        migrations.AddIndex(
            model_name='votesession',
            index=models.Index(fields=['game', 'is_active'], name='games_votes_game_id_bcb050_idx'),
        ),
        migrations.AddIndex(
            model_name='votesession',
            index=models.Index(fields=['game', 'kind', 'started_at'], name='games_votes_game_id_433ea2_idx'),
        ),
        migrations.AddIndex(
            model_name='voteoption',
            index=models.Index(fields=['session'], name='games_voteo_session_da082b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='voteoption',
            unique_together={('session', 'content_type', 'object_id')},
        ),
        migrations.AddIndex(
            model_name='voteballot',
            index=models.Index(fields=['session', 'voter'], name='games_voteb_session_67f925_idx'),
        ),
        migrations.AddIndex(
            model_name='voteballot',
            index=models.Index(fields=['session', 'option'], name='games_voteb_session_73478d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='voteballot',
            unique_together={('session', 'voter')},
        ),
    ]
